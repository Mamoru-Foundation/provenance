name: "Build docker image"
on:
  push:
    branches:
      - master
      - 'mamoru*'
      - develop

env:
  REPOSITORY: mamorufoundation/provenance-sniffer

jobs:
  build:
    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        platform: [linux/amd64] # linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/386
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y-%m-%d')"

      - name: Set architecture variable
        id: set_arch
        run: echo "::set-output name=arch::$(uname -m)"

      - name: Go mod vendor
        run: |
          go mod vendor

      - name: Prepare
        id: prep
        run: |
          VERSION=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=latest
            fi
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}"
          fi
          echo "Setting output: version=${VERSION}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Setting output: tags=${TAGS}"
          echo "tags=${TAGS}" >> "$GITHUB_OUTPUT"
          created="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          echo "Setting output: created=$created"
          echo "created=$created" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          target: run
          file: docker/blockchain/Dockerfile
          build-args: |
            VERSION=${{ steps.prep.outputs.version }}
            GIT_REVISION=${{ github.sha }}
            BUILD_DATE=${{ steps.date.outputs.date }}
            PROFILE=release
            COMMIT=${{ github.sha }}
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REPOSITORY }}:latest
            ${{ env.REPOSITORY }}:${{ github.sha }}

